#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.24.1
#  in conjunction with Tcl version 8.6
#    Jul 19, 2019 10:03:34 AM EDT  platform: Windows NT

import sys
import serial

try:
    import Tkinter as tk
    from Tkinter.simpledialog import askstring
except ImportError:
    import tkinter as tk
    from tkinter.simpledialog import askstring

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import ScannerGUI_support



def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = TopLevel (root)
    ScannerGUI_support.init(root, top)
    root.mainloop()
    

w = None
def create_TopLevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = TopLevel (w)
    ScannerGUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_TopLevel():
    global w
    w.destroy()
    w = None

class TopLevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {Segoe UI} -size 16 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        winHeight = 0.625*root.winfo_screenheight()
        winWidth = 0.625*root.winfo_screenwidth()

        geoString = str(int(winWidth)) + 'x' + str(int(winHeight))
       
        top.geometry(geoString)
        top.title("Nova Scanner")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        # variables that are used throughout the setup
        self.FileText = tk.StringVar()
        self.FileText.set('Limit FileName to 8 characters (omit any ending)')
        
        self.SDInserted = False

        self.SDText = tk.StringVar()
        self.SDText.set('SD Card installed: ' + str(self.SDInserted))

        self.v = tk.IntVar() # For the radio buttons
        self.v.set(0)

        self.DistSensed = 0.0 # For the distance sensed in the label under the Calibration

        self.DistText = tk.StringVar()
        self.DistText.set('Distance Measured = ' + str(self.DistSensed)) # textvariable for label4
        # variables that are used throughout the setup

        self.Canvas1 = tk.Canvas(top)
        self.Canvas1.place(relx=0.0, rely=0.0, relheight=0.5, relwidth=0.5)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="4")
        self.Canvas1.configure(highlightbackground="#d9d9d9")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief="ridge")
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=853)

        self.StartScan = tk.Button(self.Canvas1)
        self.StartScan.place(relx=0.625, rely=0.089, relheight=0.104, relwidth=0.313)
        self.StartScan.configure(activebackground="#ececec")
        self.StartScan.configure(activeforeground="#000000")
        self.StartScan.configure(background="#d9d9d9")
        self.StartScan.configure(disabledforeground="#a3a3a3")
        self.StartScan.configure(foreground="#000000")
        self.StartScan.configure(highlightbackground="#d9d9d9")
        self.StartScan.configure(highlightcolor="black")
        self.StartScan.configure(pady="0")
        self.StartScan.configure(text='''Start Scan With Name''')
        self.StartScan.configure(command=self.btnScan)
        self.StartScan.configure(state='disabled')

        self.FileName = tk.Entry(self.Canvas1)
        self.FileName.place(relx=0.033, rely=0.089, relheight=0.104, relwidth=0.537)
        self.FileName.configure(background="white")
        self.FileName.configure(disabledforeground="#a3a3a3")
        self.FileName.configure(font="TkFixedFont")
        self.FileName.configure(foreground="#000000")
        self.FileName.configure(highlightbackground="#d9d9d9")
        self.FileName.configure(highlightcolor="black")
        self.FileName.configure(insertbackground="black")
        self.FileName.configure(selectbackground="#c4c4c4")
        self.FileName.configure(selectforeground="black")
        self.FileName.configure(state='disabled')

        self.FileLabel = tk.Label(self.Canvas1)
        self.FileLabel.place(relx=0.025, rely=0.2, relheight=0.084, relwidth=0.553)
        self.FileLabel.configure(activebackground="#f9f9f9")
        self.FileLabel.configure(activeforeground="black")
        self.FileLabel.configure(background="#d9d9d9")
        self.FileLabel.configure(disabledforeground="#a3a3a3")
        self.FileLabel.configure(foreground="#000000")
        self.FileLabel.configure(highlightbackground="#d9d9d9")
        self.FileLabel.configure(highlightcolor="black")
        self.FileLabel.configure(textvariable=self.FileText)
        self.FileLabel.configure(state='disabled')

        self.Listbox1 = tk.Listbox(self.Canvas1)
        self.Listbox1.place(relx=0.033, rely=0.489, relheight=0.462
                , relwidth=0.537)
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(borderwidth="2")
        self.Listbox1.configure(disabledforeground="#a3a3a3")
        self.Listbox1.configure(font="TkFixedFont")
        self.Listbox1.configure(foreground="#000000")
        self.Listbox1.configure(highlightbackground="#d9d9d9")
        self.Listbox1.configure(highlightcolor="black")
        self.Listbox1.configure(selectbackground="#c4c4c4")
        self.Listbox1.configure(selectforeground="black")
        self.Listbox1.configure(selectmode='multiple')
        self.Listbox1.configure(width=644)
        self.Listbox1.configure(state='disabled')

        self.Delete = tk.Button(self.Canvas1)
        self.Delete.place(relx=0.625, rely=0.563, relheight=0.104, relwidth=0.313)
        self.Delete.configure(activebackground="#ececec")
        self.Delete.configure(activeforeground="#000000")
        self.Delete.configure(background="#d9d9d9")
        self.Delete.configure(disabledforeground="#a3a3a3")
        self.Delete.configure(foreground="#000000")
        self.Delete.configure(highlightbackground="#d9d9d9")
        self.Delete.configure(highlightcolor="black")
        self.Delete.configure(pady="0")
        self.Delete.configure(text='''Delete File''')
        self.Delete.configure(command=self.delFile)
        self.Delete.configure(state='disabled')

        self.Download = tk.Button(self.Canvas1)
        self.Download.place(relx=0.625, rely=0.726, relheight=0.104, relwidth=0.313)
        self.Download.configure(activebackground="#ececec")
        self.Download.configure(activeforeground="#000000")
        self.Download.configure(background="#d9d9d9")
        self.Download.configure(disabledforeground="#a3a3a3")
        self.Download.configure(foreground="#000000")
        self.Download.configure(highlightbackground="#d9d9d9")
        self.Download.configure(highlightcolor="black")
        self.Download.configure(pady="0")
        self.Download.configure(text='''Download File''')
        self.Download.configure(state='disabled')

        self.Canvas2 = tk.Canvas(top)
        self.Canvas2.place(relx=0.0, rely=0.496, relheight=0.5, relwidth=0.5)
        self.Canvas2.configure(background="#d9d9d9")
        self.Canvas2.configure(borderwidth="4")
        self.Canvas2.configure(highlightbackground="#d9d9d9")
        self.Canvas2.configure(highlightcolor="black")
        self.Canvas2.configure(insertbackground="black")
        self.Canvas2.configure(relief="ridge")
        self.Canvas2.configure(selectbackground="#c4c4c4")
        self.Canvas2.configure(selectforeground="black")
        self.Canvas2.configure(width=1203)

        self.Canvas3 = tk.Canvas(self.Canvas2)
        self.Canvas3.place(relx=0.0, rely=0.0, relheight=0.148, relwidth=1.0)
        self.Canvas3.configure(background="#d9d9d9")
        self.Canvas3.configure(borderwidth="4")
        self.Canvas3.configure(highlightbackground="#d9d9d9")
        self.Canvas3.configure(highlightcolor="black")
        self.Canvas3.configure(insertbackground="black")
        self.Canvas3.configure(relief="ridge")
        self.Canvas3.configure(selectbackground="#c4c4c4")
        self.Canvas3.configure(selectforeground="black")
        self.Canvas3.configure(width=1183)

        self.Connect = tk.Button(self.Canvas3)
        self.Connect.place(relx=0.017, rely=0.15, relheight=0.7, relwidth=0.45)
        self.Connect.configure(activebackground="#ececec")
        self.Connect.configure(activeforeground="#000000")
        self.Connect.configure(background="#d9d9d9")
        self.Connect.configure(disabledforeground="#a3a3a3")
        self.Connect.configure(foreground="#000000")
        self.Connect.configure(highlightbackground="#d9d9d9")
        self.Connect.configure(highlightcolor="black")
        self.Connect.configure(pady="0")
        self.Connect.configure(text='''Connect Via Bluetooth''')
        self.Connect.configure(command=self.serConnect)

        self.ComStatus = tk.Label(self.Canvas3)
        self.ComStatus.place(relx=0.567, rely=0.2, relheight=0.47, relwidth=0.4)
        self.ComStatus.configure(activebackground="#f9f9f9")
        self.ComStatus.configure(activeforeground="black")
        self.ComStatus.configure(background="#d9d9d9")
        self.ComStatus.configure(disabledforeground="#a3a3a3")
        self.ComStatus.configure(foreground="#000000")
        self.ComStatus.configure(highlightbackground="#d9d9d9")
        self.ComStatus.configure(highlightcolor="black")
        self.ComStatus.configure(anchor='w')
        self.ComStatus.configure(text='''Status:''')

        self.Terminal = tk.Text(self.Canvas2)
        self.Terminal.place(relx=0.017, rely=0.163, relheight=0.797
                , relwidth=0.962)
        self.Terminal.configure(background="white")
        self.Terminal.configure(font="TkTextFont")
        self.Terminal.configure(foreground="black")
        self.Terminal.configure(highlightbackground="#d9d9d9")
        self.Terminal.configure(highlightcolor="#000000")
        self.Terminal.configure(insertbackground="black")
        self.Terminal.configure(selectbackground="#c4c4c4")
        self.Terminal.configure(selectforeground="black")
        self.Terminal.configure(width=1154)
        self.Terminal.configure(wrap="word")
        self.Terminal.configure(state='disabled')

        self.Canvas4 = tk.Canvas(top)
        self.Canvas4.place(relx=0.5, rely=0.0, relheight=0.571, relwidth=0.5)
        self.Canvas4.configure(background="#d9d9d9")
        self.Canvas4.configure(borderwidth="4")
        self.Canvas4.configure(highlightbackground="#d9d9d9")
        self.Canvas4.configure(highlightcolor="black")
        self.Canvas4.configure(insertbackground="black")
        self.Canvas4.configure(relief="ridge")
        self.Canvas4.configure(selectbackground="#c4c4c4")
        self.Canvas4.configure(selectforeground="black")
        self.Canvas4.configure(width=1183)
        self.Canvas4.configure(state='disabled')

        self.JogUp = tk.Button(self.Canvas4)
        self.JogUp.place(relx=0.333, rely=0.065, relheight=0.156, relwidth=0.2)
        self.JogUp.configure(activebackground="#ececec")
        self.JogUp.configure(activeforeground="#000000")
        self.JogUp.configure(background="#d9d9d9")
        self.JogUp.configure(disabledforeground="#a3a3a3")
        self.JogUp.configure(foreground="#000000")
        self.JogUp.configure(highlightbackground="#d9d9d9")
        self.JogUp.configure(highlightcolor="black")
        self.JogUp.configure(pady="0")
        self.JogUp.configure(text='''Move Up''')
        self.JogUp.configure(state='disabled')

        self.JogDown = tk.Button(self.Canvas4)
        self.JogDown.place(relx=0.333, rely=0.467, relheight=0.156, relwidth=0.2)
        self.JogDown.configure(activebackground="#ececec")
        self.JogDown.configure(activeforeground="#000000")
        self.JogDown.configure(background="#d9d9d9")
        self.JogDown.configure(disabledforeground="#a3a3a3")
        self.JogDown.configure(foreground="#000000")
        self.JogDown.configure(highlightbackground="#d9d9d9")
        self.JogDown.configure(highlightcolor="black")
        self.JogDown.configure(pady="0")
        self.JogDown.configure(text='''Move Down''')
        self.JogDown.configure(state='disabled')

        self.JogLeft = tk.Button(self.Canvas4)
        self.JogLeft.place(relx=0.217, rely=0.266, relheight=0.156, relwidth=0.2)
        self.JogLeft.configure(activebackground="#ececec")
        self.JogLeft.configure(activeforeground="#000000")
        self.JogLeft.configure(background="#d9d9d9")
        self.JogLeft.configure(disabledforeground="#a3a3a3")
        self.JogLeft.configure(foreground="#000000")
        self.JogLeft.configure(highlightbackground="#d9d9d9")
        self.JogLeft.configure(highlightcolor="black")
        self.JogLeft.configure(pady="0")
        self.JogLeft.configure(text='''Rotate Left''')
        self.JogLeft.configure(state='disabled')

        self.JogRight = tk.Button(self.Canvas4)
        self.JogRight.place(relx=0.45, rely=0.266, relheight=0.156, relwidth=0.2)
        self.JogRight.configure(activebackground="#ececec")
        self.JogRight.configure(activeforeground="#000000")
        self.JogRight.configure(background="#d9d9d9")
        self.JogRight.configure(disabledforeground="#a3a3a3")
        self.JogRight.configure(foreground="#000000")
        self.JogRight.configure(highlightbackground="#d9d9d9")
        self.JogRight.configure(highlightcolor="black")
        self.JogRight.configure(pady="0")
        self.JogRight.configure(text='''Rotate Right''')
        self.JogRight.configure(state='disabled')

        self.JogRate = tk.Radiobutton(self.Canvas4)
        self.JogRate.place(relx=0.767, rely=0.143, relheight=0.074
                , relwidth=0.19)
        self.JogRate.configure(activebackground="#ececec")
        self.JogRate.configure(activeforeground="#000000")
        self.JogRate.configure(background="#d9d9d9")
        self.JogRate.configure(disabledforeground="#a3a3a3")
        self.JogRate.configure(foreground="#000000")
        self.JogRate.configure(highlightbackground="#d9d9d9")
        self.JogRate.configure(highlightcolor="black")
        self.JogRate.configure(justify='left')
        self.JogRate.configure(text='''+ 10 mm/deg''')
        self.JogRate.configure(variable=self.v)
        self.JogRate.configure(value=10)
        self.JogRate.configure(state='disabled')
        

        self.JogRate2 = tk.Radiobutton(self.Canvas4)
        self.JogRate2.place(relx=0.767, rely=0.22, relheight=0.074
                , relwidth=0.19)
        self.JogRate2.configure(activebackground="#ececec")
        self.JogRate2.configure(activeforeground="#000000")
        self.JogRate2.configure(background="#d9d9d9")
        self.JogRate2.configure(disabledforeground="#a3a3a3")
        self.JogRate2.configure(foreground="#000000")
        self.JogRate2.configure(highlightbackground="#d9d9d9")
        self.JogRate2.configure(highlightcolor="black")
        self.JogRate2.configure(justify='left')
        self.JogRate2.configure(text='''+ 05 mm/deg''')
        self.JogRate2.configure(variable=self.v)
        self.JogRate2.configure(value=5)
        self.JogRate2.configure(state='disabled')

        self.JogRate3 = tk.Radiobutton(self.Canvas4)
        self.JogRate3.place(relx=0.767, rely=0.298, relheight=0.074
                , relwidth=0.19)
        self.JogRate3.configure(activebackground="#ececec")
        self.JogRate3.configure(activeforeground="#000000")
        self.JogRate3.configure(background="#d9d9d9")
        self.JogRate3.configure(disabledforeground="#a3a3a3")
        self.JogRate3.configure(foreground="#000000")
        self.JogRate3.configure(highlightbackground="#d9d9d9")
        self.JogRate3.configure(highlightcolor="black")
        self.JogRate3.configure(justify='left')
        self.JogRate3.configure(text='''+ 01 mm/deg''')
        self.JogRate3.configure(variable=self.v)
        self.JogRate3.configure(value=1)
        self.JogRate3.configure(state='disabled')

        self.Home = tk.Button(self.Canvas4)
        self.Home.place(relx=0.717, rely=0.726, relheight=0.195, relwidth=0.246)
        self.Home.configure(activebackground="#ececec")
        self.Home.configure(activeforeground="#000000")
        self.Home.configure(background="#d9d9d9")
        self.Home.configure(disabledforeground="#a3a3a3")
        self.Home.configure(foreground="#000000")
        self.Home.configure(highlightbackground="#d9d9d9")
        self.Home.configure(highlightcolor="black")
        self.Home.configure(pady="0")
        self.Home.configure(text='''Run Home''')
        self.Home.configure(state='disabled')

        self.Canvas5 = tk.Canvas(top)
        self.Canvas5.place(relx=0.5, rely=0.57, relheight=0.427, relwidth=0.5)
        self.Canvas5.configure(background="#d9d9d9")
        self.Canvas5.configure(borderwidth="4")
        self.Canvas5.configure(highlightbackground="#d9d9d9")
        self.Canvas5.configure(highlightcolor="black")
        self.Canvas5.configure(insertbackground="black")
        self.Canvas5.configure(relief="ridge")
        self.Canvas5.configure(selectbackground="#c4c4c4")
        self.Canvas5.configure(selectforeground="black")
        self.Canvas5.configure(width=1197)
        self.Canvas5.configure(state='disabled')

        self.Label2 = tk.Label(self.Canvas5)
        self.Label2.place(relx=0.033, rely=0.052, relheight=0.133, relwidth=0.313)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font9)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Calibration Info''')
        self.Label2.configure(state='disabled')

        self.Dist = tk.Label(self.Canvas5)
        self.Dist.place(relx=0.067, rely=0.225, relheight=0.081, relwidth=0.647)
        self.Dist.configure(activebackground="#f9f9f9")
        self.Dist.configure(activeforeground="black")
        self.Dist.configure(background="#d9d9d9")
        self.Dist.configure(disabledforeground="#a3a3a3")
        self.Dist.configure(foreground="#000000")
        self.Dist.configure(highlightbackground="#d9d9d9")
        self.Dist.configure(highlightcolor="black")
        self.Dist.configure(anchor='w')
        self.Dist.configure(textvariable=self.DistText)
        self.Dist.configure(state='disabled')

        self.ZeroSensor = tk.Button(self.Canvas5)
        self.ZeroSensor.place(relx=0.808, rely=0.208, relheight=0.121, relwidth=0.073)
        self.ZeroSensor.configure(activebackground="#ececec")
        self.ZeroSensor.configure(activeforeground="#000000")
        self.ZeroSensor.configure(background="#d9d9d9")
        self.ZeroSensor.configure(disabledforeground="#a3a3a3")
        self.ZeroSensor.configure(foreground="#000000")
        self.ZeroSensor.configure(highlightbackground="#d9d9d9")
        self.ZeroSensor.configure(highlightcolor="black")
        self.ZeroSensor.configure(pady="0")
        self.ZeroSensor.configure(text='''Zero''')
        self.ZeroSensor.configure(state='disabled')

        self.Label4 = tk.Label(self.Canvas5)
        self.Label4.place(relx=0.067, rely=0.399, relheight=0.081, relwidth=0.297)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(anchor='w')
        self.Label4.configure(textvariable=self.SDText)
        self.Label4.configure(state='disabled')

        
    def contains(self, listbox, string):
        for n in listbox.get(0, tk.END):
            if(n == string):
                return True
        
        return False

    def btnScan(self):
        f = self.FileName.get()

        if(' ' in f):
            f = f.replace(' ', '_')

        if(len(f) > 8):
            self.FileText.set('ERROR: FileName exceeds 8 characters')
        elif(len(f) == 0):
            self.FileText.set('ERROR: Please enter a FileName')
        elif(self.contains(self.Listbox1, f)):
            self.FileText.set('ERROR: FileName already exists')
        else:
            self.FileText.set('Limit FileName to 8 characters (omit any ending)')
            self.Listbox1.insert(tk.END, f)
            self.FileName.delete(0, tk.END)

    def delFile(self):
        items = *map(int, self.Listbox1.curselection()),

        for index in items:
            self.Listbox1.delete(index)

    port = 'COM11'
    def serConnect(self):       
        global hc

        try:
            hc = serial.Serial(self.port, 9600, timeout=1)
        except serial.serialutil.SerialException:
            print('Not connected')
            p = askstring("Error", "Are you connected to the HC-05? If you are, enter the COM port and try again")
            if(p):
                if(not len(p) == 0): 
                    self.port = p
            return
        
        if(hc):
            if(hc.is_open):
                tk.messagebox.showinfo("Nice", "You are Connected")
                for w in root.winfo_children():
                    w.configure(state='normal')

            else:
                hc.open()
            

        

if __name__ == '__main__':
    vp_start_gui()





